name: "Deploy Balena Image"
description: "Builds and pushes a Balena image to Balena Cloud"
inputs:
  balena_token:
    required: true
    description: "Balena token"
  balena_fleet:
    required: true
    description: "Target Balena fleet"
  github_ref:
    required: true
    description: "Github ref"
  github_head_ref:
    required: true
    description: "Github head ref"
  release_tag:
    description: "A tag to be used instead of the Github tag"
  balena_release_type:
    description: "Is this a release a draft"
    default: "draft"
  balena_path:
    description: "Path to read balena.yml file from"
    default: "./balena.yml"
  commit:
    description: "Github commit"
outputs:
  github_tag:
    description: "Current Github tag"
    value: ${{ steps.get-ref.outputs.tag }}
  balena_tag:
    description: "Current Balena tag from balena.yml"
    value: ${{ steps.yaml-data.outputs.data }}
runs:
  using: "composite"
  steps:
    - name: Run read-yaml action
      id: yaml-data
      uses: jbutcher5/read-yaml@main # You may wish to replace main with a version tag such as '1.6' etc.
      with:
        file: ${{ inputs.balena_path }} # File to read from
        key-path: '["version"]' # Access the runs key then the using key and retuns the value.

    - name: Get the Ref
      id: get-ref
      uses: ankitvgupta/ref-to-tag-action@master
      with:
        ref: ${{ github.ref }}
        head_ref: ${{ github.head_ref }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Balena CLI
      shell: bash
      run: |
        npm install balena-cli --global --production --unsafe-perm
        balena login --token ${{inputs.balena_token}}

    - name: Balena Deploy Draft
      shell: bash
      if: ${{(inputs.balena_release_type == 'draft') && (success())}}
      run: |
        balena push ${{inputs.balena_fleet}} --draft --release-tag commit ${{inputs.commit}} --release-tag v${{steps.yaml-data.outputs.data}}-draft ${{ inputs.release_tag || steps.get-ref.outputs.tag }}

    - name: Balena Deploy Release
      shell: bash
      if: ${{(inputs.balena_release_type == 'release') && (success())}}
      run: |
        balena push ${{inputs.balena_fleet}} --release-tag release v${{steps.yaml-data.outputs.data}}
