name: Balena Release Beta
on:
  push:
    tags-ignore:
      - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:
  balena-deploy:
    strategy:
      matrix:
        board: ['aarch64', 'amd64']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run read-yaml action
        id: yaml-data
        uses: jbutcher5/read-yaml@main # You may wish to replace main with a version tag such as '1.6' etc.
        with:
          file: "./balena.yml" # File to read from
          key-path: '["version"]' # Access the runs key then the using key and retuns the value.

      - name: Get the Ref
        id: get-ref
        uses: ankitvgupta/ref-to-tag-action@master
        with:
          ref: ${{ github.ref }}
          head_ref: ${{ github.head_ref }}

      - name: Balena Deploy
        uses: Theia-Scientific/balena-cli@v1
        if: success()
        with:
          balena_api_token: ${{secrets.BALENA_TOKEN}}
          balena_command: "push ${{secrets.BALENA_FLEET}}_${{matrix.board}} --draft --release-tag v${{steps.yaml-data.outputs.data}} ${{ steps.get-ref.outputs.tag }}"
  balena-build-images:
    strategy:
      matrix:
        board: [pi3, pi4, rockpi4, rockpro64, generic_aarch64, nuc, generic_amd64]
        include:
          - board: pi3
            arch: aarch64
            image: raspberrypi3-64
          - board: pi4
            arch: aarch64
            image: raspberrypi4-64
          - board: rockpi4
            arch: aarch64
            image: rockpi-4b-rk3399
          - board: rockpro64
            arch: aarch64
            image: rockpro64
          - board: generic_aarch64
            arch: aarch64
            image: generic-aarch64
          - board: nuc
            arch: amd64
            image: intel-nuc
          - board: generic_amd64
            arch: amd64
            image: generic-amd64
    runs-on: ubuntu-latest
    needs: [balena-deploy]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 12.22.5

      - name: Install latest balena-cli
        run: npm install -g balena-cli

      - name: Login
        run: balena login --token ${{ secrets.BALENA_TOKEN }}

      - name: Get os versions
        run: echo "OS_VERSION=$(balena os versions ${{matrix.image}} | head -n 1)" >> $GITHUB_ENV

      - name: balena CLI Action - download
        run: |
          balena os download "${{matrix.image}}" \
            --output "${{matrix.image}}.img"

      - name: balena CLI Action - preload
        run: |
          balena preload \
            "${{matrix.image}}.img" \
            --fleet "${{secrets.BALENA_FLEET}}_${{matrix.arch}}" \
            --dont-check-arch  \
            --commit latest

      - name: balena CLI Action - configure
        run: |
          balena os configure \
            "${{matrix.image}}.img" \
            --config-network=ethernet  \
            --version "${{env.OS_VERSION}}" \
            --device-type "${{matrix.image}}" \
            --fleet "${{secrets.BALENA_FLEET}}_${{matrix.arch}}"

      - name: Get the Ref
        id: get-ref
        uses: ankitvgupta/ref-to-tag-action@master
        with:
          ref: ${{ github.ref }}
          head_ref: ${{ github.head_ref }}

      - name: Zip image
        run: |
          zip -9 \
            "${{matrix.image}}-${{ steps.get-ref.outputs.tag }}.zip" \
            "${{matrix.image}}.img"

      - name: "✏️ Upload imgs and release"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.PAT }}"
          prerelease: TRUE
          files: "*.zip"
