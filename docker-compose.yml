version: "2.1"

volumes:
  fdroid:
  portal:
  mapeo:
  crawls:
  pywb-archive:
  minio-data:
  installers:
  mapeo-bridge:
  postgres_data:
  mbtiles:
  bundler:
  terrastories-data:
  terrastories-media:
  terrastories-import:
services:
  # https://github.com/balenablocks/hostname
  hostname:
    image: balenablocks/hostname:latest
    restart: "no"
    labels:
      io.balena.features.supervisor-api: 1
    environment:
      SET_HOSTNAME: edt
  # https://github.com/balena-os/wifi-connect
  wifi:
    restart: always
    build: services/wifi-connect
    network_mode: "host"
    labels:
      io.balena.features.dbus: "1"
    cap_add:
      - NET_ADMIN
    environment:
      DBUS_SYSTEM_BUS_ADDRESS: "unix:path=/host/run/dbus/system_bus_socket"
  # https://hub.docker.com/_/httpd
  portal:
    build: services/portal
    restart: always
    volumes:
      - "portal:/usr/local/apache2/htdocs"
      - "installers:/usr/local/apache2/htdocs/installers"
      - "fdroid:/usr/local/apache2/htdocs/fdroid"
    ports:
      - 8080:80
  # https://hub.docker.com/r/communityfirst/mapeo-bridge
  mapeo-bridge:
    image: communityfirst/mapeo-bridge
    network_mode: host
    volumes:
      - "mapeo-bridge:/usr/src/output"
    restart: unless-stopped
  # https://hub.docker.com/r/minio/minio/
  minio:
    image: minio/minio
    restart: always
    dns:
      - 8.8.8.8
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - "minio-data:/data"
    command: server --address ":9000" --console-address ":9001" /data
  # https://hub.docker.com/r/filebrowser/filebrowser
  filebrowser:
    build: services/filebrowser
    restart: unless-stopped
    # user: '1000:1000' # TODO: throws permission denied error for opening database.db
    volumes:
      - crawls:/srv/crawls
      - mapeo:/srv/mapeo
      - fdroid:/srv/fdroid
      - installers:/srv/installers
      - terrastories-import:/srv/terrastories/import
      - terrastories-media:/srv/terrastories/media
    ports:
      - 8081:80
    command: -- c
  # https://hub.docker.com/r/linuxserver/syncthing/
  syncthing:
    build: services/syncthing
    volumes:
      - crawls:/config/crawls
      - mapeo:/config/mapeo
      - fdroid:/config/fdroid
      - installers:/config/installers
    ports:
      - 8082:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
  # https://hub.docker.com/_/postgres
  db:
    image: postgres:11
    ports:
      - 5432:5432
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
  # https://hub.docker.com/r/communityfirst/terrastories
  terrastories:
    image: communityfirst/terrastories
    ports:
      - 8083:3000
    depends_on:
      - db
    volumes:
      - bundler:/usr/local/bundle
      - terrastories-data:/api
      - terrastories-media:/media
      - terrastories-import:/api/import/media
  # https://hub.docker.com/r/wifidb/tileserver-gl
  tile-server:
    image: wifidb/tileserver-gl
    ports:
      - 8084:80
    volumes:
      - mbtiles:/data
  # https://hub.docker.com/r/communityfirst/pywb
  pywb:
    build: services/pywb
    ports:
      - 8086:8080
    volumes:
      - pywb-archive:/webarchive
      - crawls:/source
